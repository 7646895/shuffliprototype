/***********
 This function is used to send data to firebase.
***********/

func uploadImg(img: UIImage){ //Posting image to firebase
        
        if let imgData = UIImageJPEGRepresentation(img, 0.2) {
            
            let imgUid = NSUUID().uuidString
            
            let metadata = FIRStorageMetadata()
            
            metadata.contentType = "img/jpeg"
            
            SVProgressHUD.show(withStatus: "Uploading")
            
            FIRStorage.storage().reference().child(imgUid).put(imgData, metadata: metadata) { (metadata, error) in
                
                SVProgressHUD.dismiss()
                
                if error != nil {
                    
                    print("did not upload img")
                    
                } else {
                    
                    print("uploaded")
                    
                    let downloadURl = metadata?.downloadURL()?.absoluteString
                    print(downloadURl!)
                    self.ref?.child("Image").child("URL").childByAutoId().setValue(downloadURl)
                }
            }
        }
    }

/***********
 This is used to redirect view to a storyboard view controller with a ‘storyboard ID’.
***********/

let vc = storyboard?.instantiateViewController(withIdentifier: "VC_signin");
present(vc!, animated: true, completion: nil);


/***********
 This is used to redirect view to a newly instantiated tab view controller.
***********/

let tabs = TabBarController()		//where TabBarController is the name of the view.
self.present(tabs, animated: true, completion: nil)


**NOTE**

The database user node contains a field called ‘roleID’. This represents the type of user. The legend is as follows:
 1: Level 2 Manager that can manage users.
 2: Level 2 Manager that CANNOT manage users (this refers to brand ambassadors).
 3: Level 3 users.

********

/***********
 This is used to update a record in the database without overwriting it.
***********/

let key = ref.child("posts").childByAutoId().key
let post = ["uid": userID,
            "author": username,
            "title": title,
            "body": body]
let childUpdates = ["/posts/\(key)": post,
                    "/user-posts/\(userID)/\(key)/": post]
ref.updateChildValues(childUpdates)


/***********
 This is used to retrieve data where the path is “users/UID”.
***********/
let userUID = FIRAuth.auth()?.currentUser?.uid;
        print("shuffli: "+userUID!);
        FIRDatabase.database().reference().child("users").child(userUID!).observeSingleEvent(of: .value , with: { snapshot in
                
                if snapshot.exists() {
                    
                    let recent = snapshot.value as!  NSDictionary
                    print(recent);
                    print("shuffli: "+(recent["roleID"] as? String)!);
        }});
































